 /* This file specifically exists to do the following: 
  1. Target all the elements which adhere to the team's color scheme
  2. Control elements which depend on that color
    For example, text color needs to change based on the content of the team's color, since white text looks better than black text against a purple background */

// This function is fun because it allows us to do some changing around of values based on the hex code of each color. Named bg-color because that's the most ideal use case for us. You can find the details at the link below
// https://stackoverflow.com/a/3943023/6637133

@function text-color($color) {
  @return if(
    red($color) * 0.299 + green($color) * 0.587 + blue($color) * 0.114 > 186,
    #000000, #ffffff
  );
}


/* The nav tabs on the scoring modal to switch between score and assists. Bit of an anti-pattern since we need
to style the active tab away from the color (it's classless when it's the inactive tab, and class "active" when open). This also exploits the specificity rule of CSS on a knife's edge which seems jank to me, since the same 
li is being referred to as "li" in one pass and ".active" in another */

.score-modal-header.A {
  color: $color_a;
}
.score-modal-header.B {
  color: $color_b;
}

.scoring-header.A {
  color: $color_a;
}
.scoring-header.B {
  color: $color_b;
}

.score-tabs.A > .nav > li > a {
  color: $color_a;
}

.score-tabs.A > .nav > .active > a {
  color: black;
}

.score-tabs.B > .nav > li > a {
  color: $color_b;
}

.score-tabs.B > .nav > .active > a {
  color: black;
}

/* The "Who Scored Buttons" */
.btn-scorer.A.active { 
  color: text-color($color_a); 
  background-color: $color_a ;
}

.btn-scorer.B.active {
  color: text-color($color_b); 
  background-color: $color_b ;
}

/* The "how many points" buttons */
.btn-points.A.active {
  color: text-color($color_a); 
  background-color: $color_a ;
}

.btn-points.B.active {
  color: text-color($color_b); 
  background-color: $color_b ;
}

/* The slider buttons on the "Anything Cool Happen" Well, and the tracks when activated. Ideally the labels could 
change too, but that's likely to require some JS */

.btn-score-addon.A.active {
  color: text-color($color_a); 
  background-color: $color_a ;
}

.btn-score-addon.B.active {
  color: text-color($color_b); 
  background-color: $color_b ;
}

/* The footer buttons */
.score-submission-button.A > button {
  color: text-color($color_a);
  background-color: $color_a;
}

.score-submission-button.B > button {
  color: text-color($color_b); 
  background-color: $color_b ;
}

/* The buttons in assists tab */
.btn-assists.A.active{
  color: text-color($color_a); 
  background-color: $color_a ;
}
.btn-assists.B.active{
  color: text-color($color_b); 
  background-color: $color_b ; 
}

.bootstrap-switch-id-A-related_point > .bootstrap-switch-container > .bootstrap-switch-handle-on {
  background-color: $color_a !important;
  color: text-color($color_a);
}

.bootstrap-switch-id-B-related_point > .bootstrap-switch-container > .bootstrap-switch-handle-on {
  background-color: $color_b !important;
  color: text-color($color_b);
}

/* Important is used here because we have to override some really stubborn bootstrap defaults */
.bootstrap-switch-id-A-related_point.bootstrap-switch-focused {
  border-color: $color_a !important;
  box-shadow: none !important ;
}
.bootstrap-switch-id-B-related_point.bootstrap-switch-focused {
  border-color: $color_b !important;
  box-shadow: none !important;
}
